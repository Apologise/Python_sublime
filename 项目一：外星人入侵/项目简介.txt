1 游戏简介
在游戏《外星人入侵》中，玩家控制着一艘最初出现在屏幕底部中央的飞船。玩家可以使用箭头键左右移动飞船，还可以使用空格键进行射击。游戏开始时，一群外星人出现在天空中，他们在屏幕中向下移动。玩家的任务是射杀这些外星人。玩家将所有的外星人都消灭干净后，将出现一群新的外星人，他们的移动速度更快。只要有外星人撞到了玩家的飞船或者达到了屏幕的底部，玩家就损失一艘飞船。玩家损失三艘飞船后，游戏结束。

2.第一阶段
创建一艘可以左右移动的飞船，这艘飞船在用户按空格键时能够开火。设置好这种行为后，我们就可以将注意力转向外星人，并提高这款游戏的可玩性。
	2.1 安装Pygame
		使用pip安装Pygame,命令为：
		pip3 install pygame
	2.2 开始游戏项目
		首先想创建一个空的Pygame窗口，供后面用来绘制游戏元素，如飞船和外星人。我们还将让这个游戏响应用户输入、设置背景色以及加载飞船图像。
		2.2.1 创建窗口及初始化
		使用Pygame编写的游戏基本结构如下：
		alien_invasion.py
		首先需要导入模块sys和pygame。模块pygame包含游戏开发所需的功能，sys模块用于游戏退出功能。
		这个游戏是由一个while循环来控制，其中包含一个事件循环以及管理屏幕更新的代码。事件是用户所发出的操作。当玩家点击关闭按钮，将检测到pygame.QUIT事件，来调用sys.exit()退出游戏。
		pygame.init():                 初始化背景设置
		pygame.display.set_mode():     创建一个名为screen(变量名)的显示窗口。参数"(1200, 而不是pygame.display.set_mode(1200,800),否则会报错。
		pygame.event.get():            访问pygame检测到的事件
		pygame.display.flip():         命令pygame让最近绘制的屏幕可见。每次执行while时会绘制一个空屏幕，擦除旧的屏幕
		run_game():                    启动游戏

		2.2.2 设置背景色
		Pygame默认创建一个黑色屏幕，这实在太丑了。可以将背景设置为另外一种背景色：
		alien_invasion.py
		用元祖bg_color(230,230,230)保存RGB颜色。
		调用方法screen.fill()，用背景色填充屏幕；这个方法只接受一个实参，一种颜色

		2.2.3 创建设置类
		每次给游戏添加新功能时，通常引入一些新的设置。因此编写一个类来保存游戏的设置参数是非常有必要的。
		settings.py
		在主程序中，我们导入Settings类，调用pygame.init()，在创建一个Settings的一个实例，并将其储存在变量ai_settings中。